#!/usr/bin/env ruby
require "shellwords"

class TidyCheck
  def initialize(*args)
    @input = args[0]
    @tidycheckrc = File.expand_path("~/.tidycheckrc")

    unless File.exists?(@tidycheckrc)
      puts "Unable to find #{@tidycheckrc}"
      exit
    end

    @stderr = `tidy -config #{@tidycheckrc} -o /dev/null #{@input.shellescape} 2>&1`
    @exitcode = $?.exitstatus
  end

  # Check if command returned errors or warnings
  def has_errors?
    return @exitcode == 2 || @exitcode == 1
  end

  # Get the full list of errors
  def get_errors
    return nil unless has_errors?
    return filter_low_priority_errors(@stderr)
  end

  # Remove useless errors from the list
  def filter_low_priority_errors(errors)
    list = errors.split("\n")
    list.reject! do |line|
      line.include?("is not approved by W3C") ||
      line.include?('proprietary attribute "ng-') || # AngularJS custom attributes
      line.include?("inserting implicit <body>") ||
      line =~ /trimming empty <(i|em|span)>/ # Used for icons and presentation
    end
    return nil if list.size==0
    return list.join("\n")
  end

  def run
    exit if !has_errors?
    errors = get_errors
    puts errors if errors!=nil
  end
end
TidyCheck.new(*ARGV).run()
